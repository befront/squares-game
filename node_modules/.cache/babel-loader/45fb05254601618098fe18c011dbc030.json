{"ast":null,"code":"var _jsxFileName = \"/Users/vladislavkorzo/Work/squares-game/src/components/screens/Game/components/PlayerInfo/PlayerInfo.tsx\";\nimport * as React from 'react';\nimport * as S from './PlayerInfo.style';\n\nconst PlayerInfo = ({\n  isCurrent,\n  name,\n  color,\n  points\n}) => React.createElement(S.PlayerInfo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(S.Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(S.Name, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, name, \": \"), React.createElement(S.Points, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, points)), isCurrent && React.createElement(S.Mark, {\n  color: color,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}));\n\nexport default PlayerInfo;","map":{"version":3,"sources":["/Users/vladislavkorzo/Work/squares-game/src/components/screens/Game/components/PlayerInfo/PlayerInfo.tsx"],"names":["React","S","PlayerInfo","isCurrent","name","color","points"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,oBAAnB;;AASA,MAAMC,UAA4B,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAD,KACjC,oBAAC,CAAD,CAAG,UAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,CAAD,CAAG,OAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,CAAD,CAAG,IAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAUF,IAAV,OADJ,EAEI,oBAAC,CAAD,CAAG,MAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAYE,MAAZ,CAFJ,CADJ,EAKMH,SAAS,IACP,oBAAC,CAAD,CAAG,IAAH;AAAQ,EAAA,KAAK,EAAEE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANR,CADJ;;AAYA,eAAeH,UAAf","sourcesContent":["import * as React from 'react';\n\nimport * as S from './PlayerInfo.style';\n\ninterface IProps {\n    isCurrent: boolean,\n    name: string,\n    color: string,\n    points: number\n}\n\nconst PlayerInfo: React.FC<IProps> = ({ isCurrent, name, color, points }) => (\n    <S.PlayerInfo>\n        <S.Content>\n            <S.Name>{ name }: </S.Name>\n            <S.Points>{ points }</S.Points>\n        </S.Content>\n        { isCurrent && (\n            <S.Mark color={color} />\n        )}\n    </S.PlayerInfo>\n);\n\nexport default PlayerInfo;"]},"metadata":{},"sourceType":"module"}