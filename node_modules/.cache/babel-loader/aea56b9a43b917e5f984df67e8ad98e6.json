{"ast":null,"code":"var _jsxFileName = \"/Users/vladislavkorzo/Work/squares-game/src/components/screens/CreateBoard/CreateBoardScreen.container.tsx\";\nimport * as React from 'react';\nimport { SCREENS } from '@constants';\nimport { useGame } from '@context/Game';\nimport CreateBoard from './CreateBoardScreen';\n\nconst CreateBoardContainer = ({\n  setCurrentScreen\n}) => {\n  const [game, dispatchGame] = useGame();\n\n  const handleContinueClick = () => {\n    setCurrentScreen(SCREENS.CREATE_PLAYERS);\n  };\n\n  const handleSizeInputChange = event => {\n    const value = event.target.value;\n    dispatchGame({\n      type: 'SET_BOARD_SIZE',\n      payload: {\n        size: value\n      }\n    });\n  };\n\n  return React.createElement(CreateBoard, {\n    boardSize: game.boardSize,\n    onContinueClick: handleContinueClick,\n    onSizeInputChange: handleSizeInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n};\n\nexport default CreateBoardContainer;","map":{"version":3,"sources":["/Users/vladislavkorzo/Work/squares-game/src/components/screens/CreateBoard/CreateBoardScreen.container.tsx"],"names":["React","SCREENS","useGame","CreateBoard","CreateBoardContainer","setCurrentScreen","game","dispatchGame","handleContinueClick","CREATE_PLAYERS","handleSizeInputChange","event","value","target","type","payload","size","boardSize"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;;AAMA,MAAMC,oBAAsC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AACrE,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBL,OAAO,EAApC;;AAEA,QAAMM,mBAAmB,GAAG,MAAM;AAC9BH,IAAAA,gBAAgB,CAACJ,OAAO,CAACQ,cAAT,CAAhB;AACH,GAFD;;AAIA,QAAMC,qBAAqB,GAAIC,KAAD,IAAgD;AAC1E,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AAEAL,IAAAA,YAAY,CAAC;AACTO,MAAAA,IAAI,EAAE,gBADG;AAETC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAEJ;AADD;AAFA,KAAD,CAAZ;AAMH,GATD;;AAWA,SACI,oBAAC,WAAD;AACI,IAAA,SAAS,EAAEN,IAAI,CAACW,SADpB;AAEI,IAAA,eAAe,EAAET,mBAFrB;AAGI,IAAA,iBAAiB,EAAEE,qBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH,CAzBD;;AA2BA,eAAeN,oBAAf","sourcesContent":["import * as React from 'react';\n\nimport { SCREENS } from '@constants';\n\nimport { useGame } from '@context/Game';\n\nimport CreateBoard from './CreateBoardScreen';\n\ninterface IProps {\n    setCurrentScreen(screen: string): void\n}\n\nconst CreateBoardContainer: React.FC<IProps> = ({ setCurrentScreen }) => {\n    const [game, dispatchGame] = useGame();\n\n    const handleContinueClick = () => {\n        setCurrentScreen(SCREENS.CREATE_PLAYERS);\n    };\n\n    const handleSizeInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n\n        dispatchGame({\n            type: 'SET_BOARD_SIZE',\n            payload: {\n                size: value\n            }\n        });\n    };\n\n    return (\n        <CreateBoard\n            boardSize={game.boardSize}\n            onContinueClick={handleContinueClick}\n            onSizeInputChange={handleSizeInputChange}\n        />\n    );\n};\n\nexport default CreateBoardContainer;"]},"metadata":{},"sourceType":"module"}